
    /**
     * Debug function that indicates how numbers are currently available for a cell.
     *
     * @param cell the SudokuCell to get results for.
     * @return a string with a character for each number, where the character represents the
     * availability of that number for this cell; F=Fixed, T=Tried, A=Available, U=Unavailable.
     */
    /*String whatNumbers(SudokuCell cell) {
        int n;
        String s = "";

        for (n = 0; n < 9; n++) {
            if (n > 0) s = s + ", ";
            s = s + String.valueOf(n + 1);
            if (cell.getUsage(n + 1) == CellNumberUsage.FIXED) {
                s = s + "F";
            } else if (cell.getUsage(n + 1) == CellNumberUsage.TRIED) {
                s = s + "T";
            } else if (mHorizontalUsage[cell.x][n] == CellNumberUsage.AVAILABLE
                    && mVerticalUsage[cell.y][n] == CellNumberUsage.AVAILABLE
                    && mBlockUsage[cell.cellBlock.x][cell.cellBlock.y][n] == CellNumberUsage.AVAILABLE) {
                s = s + "A";
            } else {
                s = s + "U";
            }
        }

        return s;
    }*/


/*
    void outUsage() {
        int x, y, n, m;
        SudokuCell c;
        String s;

        for (y = 0; y < 9; y++) {
            for (n = 0; n < 9; n+=3) {
                s = "";
                for (x = 0; x < 9; x++) {
                    c = mCells[x][y];
                    for (m = 0; m < 3; m++) {
                        CellNumberUsage usage = c.getUsage(n + m + 1);
                        switch (usage) {
                            case USED:
                                s = s + "U";
                                break;
                            case FIXED:
                                s = s + "F";
                                break;
                            case AVAILABLE:
                                s = s + "A";
                                break;
                            default:
                                s = s + "T";
                                break;
                        }
                    }
                    if (x<8) s = s + "|";
                }
                Log.d("#", s);
            }
            Log.d("#", "------------------------------");
        }
    }
*/

